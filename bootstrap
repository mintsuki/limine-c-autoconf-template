#! /bin/sh

set -ex

srcdir="$(dirname "$0")"
test -z "$srcdir" && srcdir=.

: "${AUTORECONF:=autoreconf}"
: "${AUTOMAKE:=automake}"

cd "$srcdir"

AUXFILES="install-sh"

clone_repo_commit() {
    if test -d $2/.git; then
        git -C $2 reset --hard
        git -C $2 clean -fd
        if ! git -C $2 checkout $3; then
            rm -rf $2
        fi
    else
        if test -d $2; then
            echo "error: '$2' is not a Git repository"
            exit 1
        fi
    fi
    if ! test -d $2; then
        git clone $1 $2
        git -C $2 checkout $3
    fi
}

download_by_hash() {
    DOWNLOAD_COMMAND="curl -Lo"
    if ! command -v $DOWNLOAD_COMMAND >/dev/null 2>&1; then
        DOWNLOAD_COMMAND="wget -O"
        if ! command -v $DOWNLOAD_COMMAND >/dev/null 2>&1; then
            echo "error: Neither curl nor wget found"
            exit 1
        fi
    fi
    SHA256_COMMAND="sha256sum"
    if ! command -v $SHA256_COMMAND >/dev/null 2>&1; then
        SHA256_COMMAND="sha256"
        if ! command -v $SHA256_COMMAND >/dev/null 2>&1; then
            echo "error: Cannot find sha256(sum) command"
            exit 1
        fi
    fi
    if ! test -f $2 || ! $SHA256_COMMAND $2 | grep $3 >/dev/null 2>&1; then
        rm -f $2
        mkdir -p $2 && rm -rf $2
        $DOWNLOAD_COMMAND $2 $1
        if ! $SHA256_COMMAND $2 | grep $3 >/dev/null 2>&1; then
            echo "error: Cannot download file '$2' by hash"
            exit 1
        fi
    fi
}

if ! test -f version; then
    clone_repo_commit \
        https://github.com/osdev0/freestanding-headers.git \
        freestanding-headers \
        dd3abd2d7147efc4170dff478d3b7730bed14147

    clone_repo_commit \
        https://github.com/osdev0/cc-runtime.git \
        src/cc-runtime \
        aa5854cebb4a5a561f35252cdda741919fc9c3f6

    download_by_hash \
        https://github.com/osdev0/freestanding-toolchain/raw/18a5e52483344e117d45738c9afb2b34792cbced/freestanding-toolchain \
        build-aux/freestanding-toolchain \
        b5b66c4e94d463116e549b10e78fb96cdb97530cc165f9b5babe31a97a78e90c
    chmod +x build-aux/freestanding-toolchain

    download_by_hash \
        https://github.com/limine-bootloader/limine/raw/9db882c736d4fa84fa313f235ac92b758a730210/limine.h \
        src/limine.h \
        ee166c7859b31879ee7f7d4c1556c3e0ec13866922256613288bcc416c82fcd8
fi

for auxfile in $AUXFILES; do
    rm -f build-aux/$auxfile
done

$AUTORECONF -fvi -Wall

# Older versions of autoreconf have a bug where they do not
# install auxiliary files, sometimes... Check if that is the
# case and work around...
for auxfile in $AUXFILES; do
    if ! test -f build-aux/$auxfile; then
        if ! $AUTOMAKE --print-libdir >/dev/null 2>&1; then
            echo "error: Broken autoreconf detected, but missing or broken automake."
            echo "       Please make sure automake is installed and working."
            exit 1
        fi
        AUTOMAKE_LIBDIR="$($AUTOMAKE --print-libdir)"
        if test -z "$AUTOMAKE_LIBDIR"; then
            # Assume `true` was passed as $AUTOMAKE
            continue
        fi
        mkdir -p build-aux
        cp -v "$AUTOMAKE_LIBDIR/$auxfile" build-aux/
        chmod +x build-aux/$auxfile
    fi
done
